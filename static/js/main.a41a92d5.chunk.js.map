{"version":3,"sources":["hooks/useWindowSize.ts","assets/flip-pgh-weekly-tournament-black.svg","pages/Home.tsx","pages/Results.tsx","pages/Rules.tsx","pages/Schedule.tsx","assets/flip-pgh-logo-white.svg","components/MenuItems.tsx","components/MobileMenu.tsx","components/SideMenu.tsx","components/FlipPghApp.tsx","reportWebVitals.ts","index.tsx"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","handleOrientationChange","e","addEventListener","screen","orientation","removeEventListener","Home","size","className","Image","src","logo","to","Results","Rules","target","rel","href","custom_schedule","date","location","no_tournament_scheduled","no_tournament_msg","findMatchplayLink","scheduleItem","tournaments","matchedTournament","find","value","urlLabel","url_label","renderDateListItem","dates","map","o","dateString","moment","format","matchplay_link","Schedule","schedule","setSchedule","a","fetch","response","json","series","parseZone","start","local","updatedSchedule","console","error","fetchData","futureDates","filter","startOf","pastDates","MenuItems","navigate","useNavigate","useLocation","Menu","Item","name","onClick","style","active","pathname","MobileMenu","fixed","inverted","overflow","SideMenu","vertical","FlipPghApp","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a41a92d5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n// Referenced from here: https://usehooks.com/useWindowSize/\r\n\r\n// Define general type for useWindowSize hook, which includes width and height\r\ninterface Size {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n}\r\n\r\n// Hook\r\nexport function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Handler to call on screen orientation change\r\n    function handleOrientationChange(e: Event) {\r\n      // console.log(e);\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    window.screen.orientation.addEventListener(\"change\", handleOrientationChange);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      window.screen.orientation.removeEventListener(\"change\", handleOrientationChange);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowSize;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/flip-pgh-weekly-tournament-black.180bb7b2.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport logo from \"../assets/flip-pgh-weekly-tournament-black.svg\";\r\n\r\nfunction Home() {\r\n  const size = useWindowSize();\r\n  let className = \"\";\r\n  if (size.width && size.width > 640) {\r\n    className = \"desktop-container\";\r\n  } else {\r\n    className = \"mobile-container\";\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Image src={logo} />\r\n      <h5>\r\n        The Flip PGH Weekly Tournament series is held (mostly) every Wednesday\r\n        at locations around the Pittsburgh area. 7pm start time. Come out and\r\n        flip!\r\n      </h5>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/schedule\">Go to Schedule</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/results\">Go to Results & Stats</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/rules\">Go to Format & Rules</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\n\r\nfunction Results() {\r\n  const size = useWindowSize();\r\n  let className = \"\";\r\n  if (size.width && size.width > 640) {\r\n    className = \"desktop-container\";\r\n  } else {\r\n    className = \"mobile-container\";\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <h1>Results & Stats</h1>\r\n      <ul>\r\n        <li>Under construction -- coming soon</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\n\r\nfunction Rules() {\r\n  const size = useWindowSize();\r\n  let className = \"\";\r\n  if (size.width && size.width > 640) {\r\n    className = \"desktop-container\";\r\n  } else {\r\n    className = \"mobile-container\";\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <h1>Format & Rules</h1>\r\n      <ul>\r\n        <li>3 strike knockout</li>\r\n        <li>Random groups of 3 or 4</li>\r\n        <li>Bottom two players from each group get a strike</li>\r\n        <li>Tournament starts at 7pm</li>\r\n        <li>$5 entry fee, payouts to top 3</li>\r\n        <li>IFPA endorsed</li>\r\n        <li>\r\n          Plunge extra balls\r\n          <ul>\r\n            <li>\r\n              You may set up any skill shot beforehand, but can't touch the\r\n              machine after plunging\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          The{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://www.ifpapinball.com/rules/\"\r\n          >\r\n            PAPA/IFPA ruleset\r\n          </a>{\" \"}\r\n          will be used for any specific rulings, with the following\r\n          modifications:\r\n          <ul>\r\n            <li>\r\n              \"Good Sportsmanship\" exception: if someone shouts “Ball Save” to a\r\n              player who starts walking away from their machine, neither party\r\n              will be penalized for providing / receiving coaching\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rules;\r\n","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Series, Tournament } from \"../common/types\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\n\r\ninterface ScheduleItem {\r\n  date: string;\r\n  location?: string;\r\n  ifpa_link?: string;\r\n  matchplay_link?: string;\r\n  no_tournament_scheduled?: boolean;\r\n  no_tournament_msg?: string;\r\n}\r\n\r\nconst custom_schedule: ScheduleItem[] = [\r\n  {\r\n    date: \"2022-01-12\",\r\n    location: \"Kickback Pinball Cafe\",\r\n  },\r\n  {\r\n    date: \"2022-01-19\",\r\n    location: \"Kickback Pinball Cafe\",\r\n  },\r\n  {\r\n    date: \"2022-01-26\",\r\n    location: \"Kickback Pinball Cafe\",\r\n  },\r\n  {\r\n    date: \"2022-02-02\",\r\n    no_tournament_scheduled: true,\r\n    no_tournament_msg: \"NO TOURNAMENT THIS WEEK\",\r\n  },\r\n  {\r\n    date: \"2022-02-09\",\r\n    location: \"Location TBD\",\r\n  },\r\n  {\r\n    date: \"2022-02-16\",\r\n    location: \"Location TBD\",\r\n  },\r\n  {\r\n    date: \"2022-02-23\",\r\n    location: \"Location TBD\",\r\n  },\r\n];\r\n\r\nconst findMatchplayLink = (\r\n  scheduleItem: ScheduleItem,\r\n  tournaments: Tournament[]\r\n) => {\r\n  const matchedTournament = tournaments.find((value) => {\r\n    return value.date === scheduleItem.date;\r\n  });\r\n  const urlLabel = matchedTournament?.url_label;\r\n  if (urlLabel) {\r\n    return \"https://matchplay.events/live/\" + urlLabel;\r\n  }\r\n};\r\n\r\nconst renderDateListItem = (dates: ScheduleItem[]) => {\r\n  return dates.map((o) => {\r\n    const dateString = moment(o.date).format(\"ddd, M/D/YYYY\");\r\n    if (o.no_tournament_scheduled) {\r\n      return (\r\n        <li key={dateString}>\r\n          {dateString} - {o.no_tournament_msg}\r\n        </li>\r\n      );\r\n    }\r\n    if (o.matchplay_link) {\r\n      return (\r\n        <li key={dateString}>\r\n          {dateString} - {o.location} [\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={o.matchplay_link}>\r\n            Matchplay\r\n          </a>\r\n          ]\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <li key={dateString}>\r\n        {dateString} - {o.location}\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nfunction Schedule() {\r\n  const [schedule, setSchedule] = useState<ScheduleItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const path = \"https://matchplay.events/data/series/1871\";\r\n      try {\r\n        const response = await fetch(path);\r\n        const series: Series = await response.json();\r\n        series.tournaments = series.tournaments.map((o) => {\r\n          o.date = moment.parseZone(o.start).local().format(\"YYYY-MM-DD\");\r\n          return o;\r\n        });\r\n        const updatedSchedule = custom_schedule.map((o) => {\r\n          o.matchplay_link = findMatchplayLink(o, series.tournaments);\r\n          return o;\r\n        });\r\n        setSchedule(updatedSchedule);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const size = useWindowSize();\r\n  let className = \"\";\r\n  if (size.width && size.width > 640) {\r\n    className = \"desktop-container\";\r\n  } else {\r\n    className = \"mobile-container\";\r\n  }\r\n\r\n  const futureDates: ScheduleItem[] = schedule.filter((value) => {\r\n    return moment(value.date) >= moment().startOf(\"day\");\r\n  });\r\n\r\n  const pastDates: ScheduleItem[] = schedule.filter((value) => {\r\n    return moment(value.date) < moment().startOf(\"day\");\r\n  });\r\n\r\n  return (\r\n    <div className={className}>\r\n      <h1>Upcoming Schedule</h1>\r\n      <ul>{renderDateListItem(futureDates)}</ul>\r\n      <h1>Past Dates</h1>\r\n      <ul>{renderDateListItem(pastDates)}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","export default __webpack_public_path__ + \"static/media/flip-pgh-logo-white.025b1149.svg\";","import React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Image, Menu } from \"semantic-ui-react\";\r\nimport logo from \"../assets/flip-pgh-logo-white.svg\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\n\r\nfunction MenuItems() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const size = useWindowSize();\r\n\r\n  const renderLogo = () => {\r\n    if (size.width && size.width > 640) {\r\n      return <Image src={logo} />;\r\n    }\r\n    return <Image src={logo} style={{ height: 50, width: 50 }} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu.Item\r\n        name=\"logo\"\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n        }}\r\n      >\r\n        {renderLogo()}\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"home\"\r\n        active={location.pathname === \"/\"}\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n        }}\r\n      >\r\n        Home\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"schedule\"\r\n        active={location.pathname === \"/schedule\"}\r\n        onClick={() => {\r\n          navigate(\"/schedule\");\r\n        }}\r\n      >\r\n        Schedule\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"results\"\r\n        active={location.pathname === \"/results\"}\r\n        onClick={() => {\r\n          navigate(\"/results\");\r\n        }}\r\n      >\r\n        Results & Stats\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        name=\"rules\"\r\n        active={location.pathname === \"/rules\"}\r\n        onClick={() => {\r\n          navigate(\"/rules\");\r\n        }}\r\n      >\r\n        Format & Rules\r\n      </Menu.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MenuItems;\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport MenuItems from \"./MenuItems\";\r\n\r\nfunction MobileMenu() {\r\n  return (\r\n    <Menu fixed=\"top\" inverted style={{ overflow: \"auto\" }}>\r\n      <MenuItems />\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default MobileMenu;\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport MenuItems from \"./MenuItems\";\r\n\r\nfunction SideMenu() {\r\n  return (\r\n    <Menu inverted vertical fixed=\"left\">\r\n      <MenuItems />\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useWindowSize } from \"../hooks/useWindowSize\";\r\nimport Home from \"../pages/Home\";\r\n// import './FlipPghHome.css';\r\nimport Results from \"../pages/Results\";\r\nimport Rules from \"../pages/Rules\";\r\nimport Schedule from \"../pages/Schedule\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport SideMenu from \"./SideMenu\";\r\n\r\nfunction FlipPghApp() {\r\n  const size = useWindowSize();\r\n  // console.log(size);\r\n\r\n  const renderMenu = () => {\r\n    if (size.width && size.width > 640) {\r\n      return <SideMenu />;\r\n    }\r\n    return <MobileMenu />;\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      {renderMenu()}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/schedule\" element={<Schedule />} />\r\n        <Route path=\"/results\" element={<Results />} />\r\n        <Route path=\"/rules\" element={<Rules />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default FlipPghApp;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport FlipPghApp from './components/FlipPghApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FlipPghApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}